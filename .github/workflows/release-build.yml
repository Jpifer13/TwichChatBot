name: Release Build - Test, Build & Redeploy

on:
  push:
    branches: [ master, release ]
  pull_request:
    branches: [ master, release ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  docker-build:
    runs-on: ubuntu-latest
    needs: [test]
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      run: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $DOCKER_USER/chat
    - name: Publish Docker image
      run: docker push $DOCKER_USER/chat
  
  redeploy:
    name: Redeploy webhook call
    runs-on: ubuntu-18.04
    needs: [docker-build]
    steps:
      - name: Deploy docker container webhook
        uses: distributhor/workflow-webhook@v1
        env:
          webhook_url: ${{ secrets.DEPLOY_WEBHOOK_URL  }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: "{ 'repository': 'TwichChatBot'}"
